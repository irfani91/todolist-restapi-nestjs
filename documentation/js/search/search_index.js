var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.173,1,2.138]],["body/controllers/AppController.html",[0,1.846,1,3.363,2,1.459,3,0.344,4,0.299,5,0.299,6,3.41,7,0.601,8,1.586,9,4.972,10,1.575,11,0.029,12,0.851,13,4.063,14,1.254,15,1.846,16,0.558,17,0.72,18,3.036,19,3.41,20,0.344,21,0.017,22,1.845,23,3.41,24,1.352,25,4.063,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,1.008,29,2.138]],["body/modules/AppModule.html",[1,3.046,2,1.432,3,0.236,4,0.205,5,0.205,11,0.029,16,0.659,17,0.494,18,3.01,19,2.342,20,0.236,21,0.012,26,0.018,27,0.018,28,1.437,29,4.181,30,1.17,31,1.17,32,1.377,33,1.377,34,1.17,35,2.298,36,1.377,37,2.342,38,2.342,39,2.342,40,3.304,41,3.304,42,2.539,43,3.304,44,3.304,45,1.969,46,1.377,47,1.377,48,2.79,49,2.61,50,2.79,51,2.79,52,2.79,53,2.79,54,2.79,55,2.79,56,2.342,57,2.342,58,2.342,59,2.79,60,2.79,61,2.79,62,2.79,63,2.79,64,2.79]],["title/injectables/AppService.html",[18,1.76,65,0.866]],["body/injectables/AppService.html",[3,0.363,4,0.315,5,0.315,7,0.634,8,1.64,9,5.068,11,0.029,12,0.898,14,1.322,15,1.908,16,0.465,17,0.759,18,2.862,20,0.363,21,0.018,24,1.426,26,0.023,27,0.023,65,1.409,66,1.946,67,3.596,68,4.285,69,4.285,70,4.285]],["title/controllers/AuthController.html",[0,1.173,71,2.138]],["body/controllers/AuthController.html",[0,0.759,2,0.759,3,0.179,4,0.155,5,0.352,7,0.313,8,1.002,10,1.719,11,0.03,12,0.929,14,1.369,15,0.759,16,0.589,17,0.375,20,0.179,21,0.009,22,0.96,24,1.476,26,0.014,27,0.014,71,2.125,72,1.775,73,1.383,74,2.114,75,2.664,76,2.899,77,2.725,78,2.725,79,2.725,80,2.114,81,3.953,82,2.114,83,2.114,84,2.114,85,2.114,86,1.859,87,1.719,88,1.086,89,1.719,90,4.238,91,2.189,92,1.775,93,2.622,94,3.247,95,2.114,96,3.131,97,2.114,98,2.114,99,2.114,100,1.775,101,2.622,102,3.247,103,2.114,104,1.551,105,1.551,106,3.247,107,1.775,108,2.114,109,2.129,110,1.775,111,1.775,112,1.775,113,1.25,114,2.114,115,2.114,116,1.775,117,1.775,118,3.247,119,2.114,120,2.114,121,3.247,122,2.114,123,2.114,124,1.383,125,2.114,126,2.114,127,2.114,128,2.189,129,2.114,130,2.114,131,2.114,132,3.247,133,2.725,134,2.114,135,2.114,136,2.114,137,2.114,138,2.114,139,1.775,140,0.886,141,2.114,142,2.114,143,2.114,144,2.114,145,2.114,146,2.114,147,2.114,148,2.114,149,2.114,150,2.114,151,2.114,152,2.114,153,2.114,154,2.114,155,2.114]],["title/classes/AuthGuard.html",[21,0.014,113,1.931]],["body/classes/AuthGuard.html",[3,0.471,4,0.253,5,0.253,7,0.51,8,1.425,11,0.029,12,0.967,14,1.425,16,0.501,17,0.611,20,0.292,21,0.015,24,1.537,26,0.02,27,0.02,86,1.936,87,1.79,88,0.782,89,1.79,113,3.078,156,1.445,157,2.893,158,3.021,159,4.618,160,4.618,161,4.618,162,4.618,163,5.562,164,3.447,165,3.447,166,4.618,167,4.867,168,3.447,169,5.207,170,4.618,171,3.447,172,2.256,173,3.447,174,2.528,175,2.256]],["title/modules/AuthModule.html",[28,1.008,40,1.931]],["body/modules/AuthModule.html",[2,1.513,3,0.255,4,0.222,5,0.222,11,0.029,16,0.651,17,0.534,20,0.255,21,0.013,26,0.019,27,0.019,28,1.499,30,1.264,31,1.264,32,1.488,33,1.488,34,1.264,35,2.397,36,1.488,40,3.651,42,2.603,45,2.079,46,1.488,47,1.488,49,2.756,71,3.177,109,3.087,110,2.53,167,2.53,172,1.972,176,2.53,177,2.53,178,3.014,179,3.388,180,3.014,181,3.014,182,2.211,183,3.014,184,3.014,185,2.211,186,1.782,187,2.211,188,3.014,189,3.014,190,3.014,191,2.211,192,3.014,193,3.014,194,2.53,195,3.014,196,2.211,197,2.211,198,3.014,199,2.53,200,2.53]],["title/injectables/AuthService.html",[65,0.866,109,1.76]],["body/injectables/AuthService.html",[3,0.121,4,0.105,5,0.105,7,0.212,8,0.733,11,0.03,12,0.889,14,1.507,16,0.488,17,0.254,20,0.121,21,0.006,22,0.65,24,1.31,26,0.01,27,0.01,65,0.63,66,0.65,75,2.522,76,3.298,77,2.557,78,1.994,79,2.557,86,1.779,87,1.825,88,0.963,89,1.645,91,2.219,92,1.994,93,2.326,96,2.942,100,1.994,101,2.326,109,1.28,111,1.201,112,1.201,128,2.323,174,2.601,175,2.321,185,1.05,186,0.846,187,1.05,196,1.05,197,1.05,199,1.201,200,1.201,201,1.201,202,2.376,203,2.376,204,0.937,205,1.05,206,1.611,207,4.496,208,1.431,209,1.555,210,2.376,211,1.431,212,3.079,213,3.95,214,1.994,215,1.431,216,2.376,217,2.422,218,1.431,219,4.244,220,1.431,221,2.376,222,1.431,223,1.201,224,1.201,225,1.05,226,1.431,227,1.431,228,1.201,229,1.201,230,2.601,231,3.079,232,4.244,233,3.547,234,1.91,235,2.376,236,3.047,237,1.431,238,1.431,239,1.431,240,1.431,241,1.431,242,2.376,243,1.431,244,2.601,245,3.047,246,1.994,247,1.201,248,1.431,249,1.431,250,2.376,251,1.431,252,1.431,253,3.047,254,1.431,255,1.431,256,1.431,257,1.431,258,1.431,259,1.05,260,2.376,261,1.05,262,1.431,263,1.431,264,1.431,265,3.047,266,2.097,267,1.201,268,3.302,269,0.707,270,2.376,271,1.431,272,1.431,273,1.431,274,1.05,275,1.201]],["title/classes/CreateSchoolDto.html",[21,0.014,276,1.76]],["body/classes/CreateSchoolDto.html",[3,0.284,4,0.247,5,0.247,7,0.496,10,2.132,11,0.029,12,1.152,15,2.211,16,0.364,20,0.284,21,0.019,26,0.02,27,0.02,88,1.248,89,2.296,140,1.9,156,1.406,234,2.766,276,2.441,277,4.822,278,2.459,279,5.135,280,5.135,281,5.135,282,4.533,283,3.354,284,3.354,285,3.354,286,3.354,287,3.354,288,3.354,289,3.324,290,2.966,291,4.616,292,3.396,293,1.806]],["title/classes/CreateTaskDto.html",[21,0.014,294,1.931]],["body/classes/CreateTaskDto.html",[3,0.32,4,0.278,5,0.278,7,0.559,10,1.902,11,0.029,12,1.141,15,2.07,16,0.41,20,0.32,21,0.021,26,0.022,27,0.022,88,1.236,140,2.057,156,1.584,217,2.642,290,3.565,292,3.221,293,2.035,294,2.9,295,4.839,296,2.771,297,3.995,298,3.565,299,3.565,300,3.171,301,4.906,302,3.171,303,3.171]],["title/injectables/JwtStrategy.html",[65,0.866,179,1.931]],["body/injectables/JwtStrategy.html",[3,0.289,4,0.25,5,0.25,7,0.504,8,1.414,11,0.029,12,0.96,14,1.051,16,0.601,17,0.604,20,0.289,21,0.015,24,1.134,26,0.02,27,0.02,65,1.215,66,1.547,75,2.351,86,1.428,87,1.321,88,0.773,89,1.321,91,1.681,158,2.997,172,2.229,179,2.708,186,2.014,187,2.498,191,3.796,194,2.859,197,2.498,204,3.387,214,2.859,234,1.835,266,2.014,304,2.859,305,4.581,306,4.581,307,3.406,308,4.581,309,3.406,310,3.406,311,3.406,312,3.406,313,2.859,314,3.406,315,3.406,316,3.406,317,3.406,318,3.406,319,3.406,320,3.406,321,2.859,322,3.406]],["title/controllers/LatihanController.html",[0,1.173,323,2.138]],["body/controllers/LatihanController.html",[0,1.459,2,1.459,3,0.344,4,0.299,5,0.299,7,0.601,8,1.586,10,1.575,11,0.029,12,0.851,14,1.254,16,0.558,17,0.72,20,0.344,21,0.017,22,1.845,24,1.352,26,0.023,27,0.023,73,2.659,323,3.363,324,3.41,325,3.41,326,4.972,327,4.063,328,3.036,329,3.41,330,4.063,331,4.063]],["title/modules/LatihanModule.html",[28,1.008,41,1.931]],["body/modules/LatihanModule.html",[2,1.792,3,0.329,4,0.285,5,0.285,11,0.029,16,0.599,17,0.688,20,0.329,21,0.017,26,0.022,27,0.022,28,1.703,30,1.627,31,1.627,32,1.915,33,1.915,34,1.627,35,2.723,36,1.915,41,3.646,45,2.463,46,1.915,47,1.915,323,3.61,328,3.322,329,3.257,332,3.257,333,3.257,334,3.881,335,3.881]],["title/injectables/LatihanService.html",[65,0.866,328,1.76]],["body/injectables/LatihanService.html",[3,0.356,4,0.309,5,0.309,7,0.621,8,1.62,11,0.029,12,0.88,14,1.297,15,1.509,16,0.456,17,0.744,20,0.356,21,0.018,24,1.398,26,0.023,27,0.023,65,1.392,66,1.908,246,3.434,325,3.526,326,5.032,328,2.827,336,3.526,337,4.201]],["title/classes/LoginDto.html",[21,0.014,93,1.931]],["body/classes/LoginDto.html",[3,0.322,4,0.279,5,0.279,7,0.561,10,1.908,11,0.029,12,1.031,15,2.074,16,0.534,20,0.322,21,0.021,26,0.022,27,0.022,88,1.117,93,2.909,124,2.483,140,2.062,156,1.591,234,2.94,261,4.004,289,3.608,290,3.572,292,2.909,293,2.044,338,3.185,339,3.795,340,3.795,341,3.185,342,3.795,343,4.582,344,3.185,345,3.185,346,3.185,347,3.185]],["title/modules/PrismaModule.html",[28,1.008,42,1.484]],["body/modules/PrismaModule.html",[3,0.325,4,0.281,5,0.281,11,0.029,16,0.537,17,0.678,20,0.325,21,0.016,26,0.022,27,0.022,28,1.692,30,1.605,31,1.605,32,1.89,33,1.89,34,1.605,35,2.706,36,2.706,42,2.84,45,2.442,46,1.89,47,1.89,206,2.971,348,3.214,349,3.214,350,3.214,351,3.829,352,3.829]],["title/injectables/PrismaService.html",[65,0.866,206,1.484]],["body/injectables/PrismaService.html",[3,0.299,4,0.26,5,0.26,7,0.522,8,1.448,11,0.029,12,0.983,14,1.448,16,0.509,17,0.626,20,0.299,21,0.015,26,0.021,27,0.021,65,1.244,66,1.604,75,2.786,86,1.48,87,1.369,88,0.802,89,1.369,128,2.316,158,3.071,206,2.132,353,2.964,354,5.271,355,4.693,356,6.01,357,4.693,358,5.616,359,3.532,360,2.964,361,3.532,362,2.964,363,3.532,364,3.532,365,3.532,366,3.532]],["title/classes/RegisterDto.html",[21,0.014,101,1.931]],["body/classes/RegisterDto.html",[3,0.301,4,0.261,5,0.261,7,0.524,10,2.048,11,0.029,12,1.106,15,2.161,16,0.511,20,0.301,21,0.02,26,0.021,27,0.021,87,2.048,88,1.199,101,2.782,124,2.32,140,1.973,156,1.487,234,2.845,261,3.873,289,3.451,290,3.681,292,3.326,293,1.91,341,2.976,343,4.721,344,2.976,345,2.976,346,2.976,347,2.976,367,2.976,368,3.546,369,3.546,370,3.546,371,3.546,372,3.546]],["title/classes/School.html",[21,0.014,373,2.138]],["body/classes/School.html",[3,0.415,4,0.36,5,0.36,11,0.027,20,0.415,21,0.021,26,0.025,27,0.025,156,2.05,373,3.766,374,4.105]],["title/controllers/SchoolController.html",[0,1.173,375,2.138]],["body/controllers/SchoolController.html",[0,0.788,2,0.788,3,0.186,4,0.161,5,0.161,7,0.325,8,1.031,10,1.886,11,0.03,12,1.019,14,1.644,15,2.06,16,0.491,17,0.389,20,0.186,21,0.009,22,0.997,23,1.842,24,1.619,26,0.015,27,0.015,73,1.436,75,2.772,86,1.895,87,1.753,88,1.026,89,1.753,91,2.401,104,2.45,105,2.967,128,2.401,212,2.958,213,3.795,230,2.45,266,3.15,276,2.76,373,1.436,375,2.186,376,1.842,377,2.45,378,3.795,379,2.804,380,2.804,381,2.804,382,1.842,383,2.195,384,2.195,385,1.842,386,3.341,387,2.195,388,1.842,389,3.341,390,2.195,391,1.842,392,3.246,393,3.341,394,2.195,395,1.842,396,1.61,397,2.179,398,1.842,399,1.436,400,2.45,401,1.436,402,2.195,403,2.195,404,2.195,405,2.195,406,2.195,407,2.195,408,2.195,409,2.195,410,2.195,411,2.195]],["title/modules/SchoolModule.html",[28,1.008,43,1.931]],["body/modules/SchoolModule.html",[2,1.708,3,0.306,4,0.265,5,0.265,11,0.029,16,0.614,17,0.639,20,0.306,21,0.015,26,0.021,27,0.021,28,1.643,30,1.511,31,1.511,32,1.78,33,1.78,34,1.511,35,2.628,36,1.78,42,2.746,43,3.699,45,2.348,46,1.78,47,1.78,49,3.113,182,2.644,375,3.484,397,3.256,398,3.026,412,3.026,413,3.605,414,3.026,415,3.605,416,3.605]],["title/injectables/SchoolService.html",[65,0.866,397,1.76]],["body/injectables/SchoolService.html",[3,0.155,4,0.135,5,0.135,7,0.271,8,0.896,11,0.03,12,0.997,14,1.38,16,0.445,17,0.325,20,0.155,21,0.008,22,0.832,24,1.489,26,0.013,27,0.013,65,0.77,66,0.832,75,2.674,86,1.875,87,1.734,88,1.015,89,1.734,91,2.207,96,3.484,128,2.207,174,3.28,175,2.926,204,1.199,205,1.344,206,1.863,209,1.9,217,2.868,223,3.993,224,1.538,225,1.344,231,2.926,244,3.28,246,1.9,247,2.437,259,3.28,266,2.813,274,3.28,275,3.754,276,2.563,377,2.129,378,3.443,379,2.437,380,2.437,381,2.437,382,2.437,385,2.437,388,2.437,391,2.437,392,3.057,397,1.564,399,1.199,400,2.129,401,1.199,417,1.538,418,1.832,419,1.832,420,1.832,421,1.832,422,1.832,423,1.832,424,3.606,425,1.832,426,4.472,427,4.758,428,1.832,429,1.832,430,3.606,431,1.832,432,1.832,433,3.606,434,1.832,435,1.832]],["title/interfaces/Task.html",[269,1.613,436,2.138]],["body/interfaces/Task.html",[3,0.299,4,0.26,5,0.26,7,0.522,11,0.029,15,2.158,20,0.398,26,0.021,27,0.021,88,1.196,140,1.967,217,2.839,231,2.311,269,3.143,298,4.013,299,4.013,436,2.311,437,3.532,438,2.59,439,4.013,440,3.865,441,4.423,442,3.939]],["title/controllers/TaskController.html",[0,1.173,443,2.138]],["body/controllers/TaskController.html",[0,0.837,2,0.837,3,0.198,4,0.171,5,0.171,7,0.345,8,1.079,10,1.936,11,0.029,12,1.046,14,1.541,16,0.542,17,0.413,20,0.198,21,0.01,22,1.059,24,1.662,26,0.015,27,0.015,73,1.525,75,2.802,86,1.954,87,1.807,88,0.794,89,1.807,91,2.465,104,4.102,105,2.564,107,1.956,113,1.378,128,2.465,133,4.192,230,1.71,269,1.151,294,2.756,395,1.956,396,1.71,399,1.525,401,1.525,439,3.431,443,2.288,444,1.956,445,2.935,446,2.935,447,3.912,448,2.935,449,2.935,450,2.331,451,2.331,452,2.331,453,1.956,454,2.331,455,2.331,456,2.331,457,2.331,458,1.956,459,2.331,460,2.331,461,1.956,462,2.756,463,2.331,464,2.331,465,2.331,466,2.331,467,2.26,468,1.956,469,2.935,470,2.331,471,2.331,472,2.331,473,2.331,474,2.331,475,2.331,476,2.331,477,2.331,478,2.331,479,2.331,480,2.331,481,2.331,482,2.331,483,2.331,484,2.331]],["title/modules/TaskModule.html",[28,1.008,44,1.931]],["body/modules/TaskModule.html",[2,1.708,3,0.306,4,0.265,5,0.265,11,0.029,16,0.614,17,0.639,20,0.306,21,0.015,26,0.021,27,0.021,28,1.643,30,1.511,31,1.511,32,1.78,33,1.78,34,1.511,35,2.628,36,1.78,42,2.746,44,3.699,45,2.348,46,1.78,47,1.78,49,3.113,182,2.644,443,3.484,467,3.256,468,3.026,485,3.026,486,3.026,487,3.605,488,3.605,489,3.605]],["title/injectables/TaskService.html",[65,0.866,467,1.76]],["body/injectables/TaskService.html",[3,0.153,4,0.133,5,0.133,7,0.268,8,0.887,11,0.03,12,0.991,14,1.372,16,0.513,17,0.321,20,0.153,21,0.008,22,0.822,24,1.479,26,0.013,27,0.013,65,0.762,66,0.822,75,2.666,76,1.327,86,1.863,87,1.835,88,1.009,89,1.723,90,3.001,91,2.194,96,3.88,128,2.194,204,1.184,205,1.327,206,1.85,209,1.881,217,2.856,225,1.327,229,1.518,231,2.908,234,0.974,244,3.26,246,1.184,259,3.26,266,2.408,267,1.518,268,3.419,269,0.893,274,1.327,294,2.408,297,2.108,396,1.327,399,1.184,401,1.184,439,3.368,445,2.412,446,2.412,447,3.419,448,2.412,449,2.412,453,2.412,458,2.412,461,2.412,462,2.408,467,1.548,469,2.412,490,1.518,491,1.809,492,2.874,493,1.809,494,1.809,495,1.809,496,1.809,497,1.809,498,1.809,499,1.809,500,1.518,501,1.809,502,2.874,503,4.074,504,2.874,505,1.809,506,4.074,507,1.809,508,1.809,509,1.809,510,1.809,511,2.874,512,2.874,513,2.874,514,1.809,515,2.874,516,1.809,517,1.809]],["title/classes/UpdateSchoolDto.html",[21,0.014,392,1.931]],["body/classes/UpdateSchoolDto.html",[3,0.378,4,0.328,5,0.328,11,0.028,16,0.591,20,0.378,21,0.019,26,0.024,27,0.024,156,1.87,158,3.564,276,2.403,278,3.272,377,3.272,392,3.22,400,3.272,518,3.745,519,5.447,520,4.462,521,3.745,522,3.745]],["title/classes/UpdateTaskDto.html",[21,0.014,462,1.931]],["body/classes/UpdateTaskDto.html",[3,0.32,4,0.278,5,0.278,7,0.559,10,1.902,11,0.029,12,1.141,15,2.07,16,0.41,20,0.32,21,0.021,26,0.022,27,0.022,88,1.236,140,2.057,156,1.584,217,2.642,291,4.572,292,3.221,293,2.035,296,2.771,297,3.995,298,3.565,299,3.565,300,3.171,302,3.171,303,3.171,462,2.9,523,4.839,524,4.906]],["title/coverage.html",[525,3.266]],["body/coverage.html",[0,1.897,1,1.747,5,0.196,6,2.241,11,0.029,18,1.438,21,0.025,26,0.017,27,0.017,34,1.119,65,1.506,67,2.241,71,1.747,72,2.241,88,0.606,93,1.578,101,1.578,109,1.438,113,1.578,157,2.241,175,1.747,179,1.578,186,1.578,201,2.241,206,1.213,269,1.907,276,1.438,277,2.241,278,2.834,294,1.578,295,2.241,296,2.834,304,2.241,323,1.747,324,2.241,328,1.438,336,2.241,338,2.241,353,2.241,367,2.241,373,1.747,374,2.241,375,1.747,376,2.241,392,1.578,397,1.438,417,2.241,436,1.747,438,2.834,443,1.747,444,2.241,462,1.578,467,1.438,490,2.241,518,2.241,523,2.241,525,1.958,526,2.67,527,2.67,528,2.67,529,6.512,530,4.977,531,3.864,532,4.977,533,2.67,534,2.67,535,4.977,536,2.241,537,3.864,538,5.282,539,2.241,540,2.67,541,2.67,542,2.67,543,3.864,544,2.67,545,2.67,546,2.67]],["title/dependencies.html",[31,1.647,547,2.292]],["body/dependencies.html",[11,0.03,17,0.678,21,0.021,26,0.022,27,0.022,31,1.605,56,3.214,57,3.214,116,3.214,117,3.214,124,2.505,172,2.505,185,2.808,191,2.808,209,2.505,228,3.214,293,2.062,313,4.153,362,3.214,500,3.214,521,3.214,522,3.214,548,5.482,549,3.829,550,3.829,551,3.829,552,3.829,553,4.948,554,3.829,555,3.829,556,3.829,557,3.829,558,3.829,559,3.829,560,3.829,561,3.829,562,3.829,563,3.829,564,3.829]],["title/miscellaneous/functions.html",[565,1.787,566,3.297]],["body/miscellaneous/functions.html",[7,0.732,11,0.026,26,0.026,27,0.026,34,2.576,539,4.152,565,3.237,566,4.152,567,4.947]],["title/index.html",[7,0.404,568,2.731,569,2.731]],["body/index.html",[4,0.243,11,0.029,26,0.02,27,0.02,58,2.771,212,2.161,360,2.771,525,2.422,570,3.302,571,3.302,572,4.486,573,3.302,574,3.302,575,3.302,576,3.302,577,3.302,578,3.302,579,5.094,580,3.302,581,3.302,582,3.302,583,3.302,584,5.094,585,6.029,586,3.302,587,3.302,588,5.894,589,3.302,590,3.302,591,4.486,592,3.302,593,3.302,594,3.302,595,3.302,596,4.486,597,4.486,598,3.302,599,3.302,600,3.302,601,4.486,602,4.486,603,3.302,604,3.302,605,3.302,606,3.302,607,3.302,608,2.771,609,3.302,610,3.302,611,3.302,612,3.302,613,3.302,614,3.302,615,3.302,616,3.302,617,3.302,618,2.771,619,3.302,620,3.302,621,3.302,622,3.302,623,3.302,624,3.302,625,2.771]],["title/modules.html",[30,1.867]],["body/modules.html",[11,0.024,26,0.024,27,0.024,29,2.86,30,1.833,40,2.584,41,2.584,42,1.986,43,2.584,44,2.584,608,5.335,626,6.357,627,6.357,628,6.357]],["title/overview.html",[629,3.738]],["body/overview.html",[2,1.053,11,0.029,18,2.577,26,0.018,27,0.018,28,0.905,29,4.163,30,1.229,31,1.229,32,1.447,33,1.447,34,1.229,35,1.447,36,1.447,37,2.461,38,2.461,39,2.461,40,3.582,41,3.237,42,2.752,43,3.451,44,3.451,45,2.039,46,1.447,47,1.447,66,1.332,109,2.577,156,1.229,176,2.461,177,2.461,179,2.828,206,2.651,328,2.577,332,2.461,333,2.461,348,2.461,349,2.461,350,2.461,397,2.577,412,2.461,414,2.461,436,1.919,440,2.151,467,2.577,485,2.461,486,2.461,629,2.461,630,2.932,631,2.932,632,2.932,633,2.932]],["title/properties.html",[140,1.647,547,2.292]],["body/properties.html",[11,0.029,26,0.025,27,0.025,140,2.039,212,3.182,618,4.082,625,4.082,634,4.864,635,4.864,636,4.864]],["title/miscellaneous/variables.html",[565,1.787,637,3.297]],["body/miscellaneous/variables.html",[7,0.561,11,0.029,26,0.022,27,0.022,88,1.117,139,3.185,186,2.909,196,2.784,269,3.156,298,3.572,299,3.572,321,3.185,438,2.784,439,3.572,440,4.004,441,4.582,442,4.129,536,3.185,565,2.483,637,3.185,638,3.795,639,3.795,640,4.92,641,4.92,642,3.795,643,3.795]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":635,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":440,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":441,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["2/6",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["3",{"_index":442,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":631,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["5.15.0",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["57",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":630,"title":{},"body":{"overview.html":{}}}],["7",{"_index":632,"title":{},"body":{"overview.html":{}}}],["7.3.1",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":633,"title":{},"body":{"overview.html":{}}}],["abcdefghij",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":279,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["amazing",{"_index":609,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth(\"accesstoken",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiconsumes('multipart/form",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@get('profile",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('multipart/form",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":343,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":339,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":370,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isemail",{"_index":368,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(6)@maxlength(20",{"_index":341,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apitags",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":360,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":366,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":578,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":71,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":113,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":171,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":159,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":618,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":109,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["avatar(@req",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":610,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berhasil",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["binary",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":628,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":626,"title":{},"body":{"modules.html":{}}}],["building",{"_index":573,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":160,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":162,"title":{},"body":{"classes/AuthGuard.html":{}}}],["cb",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkpassword",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.email",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.id",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.name",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.password",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":156,"title":{},"body":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_latihanmodule",{"_index":332,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_latihanmodule_providers",{"_index":333,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":348,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":349,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":350,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":412,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":413,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":414,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":485,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":487,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":486,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["context",{"_index":165,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('latihan",{"_index":330,"title":{},"body":{"controllers/LatihanController.html":{}}}],["controller('school",{"_index":402,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":471,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":525,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":377,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":403,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":382,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createdata",{"_index":504,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschool",{"_index":424,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":276,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":445,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":473,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":450,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":492,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":294,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["creteduser",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data')@apibody({schema",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.email",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":502,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["data/task",{"_index":499,"title":{},"body":{"injectables/TaskService.html":{}}}],["dataschool",{"_index":427,"title":{},"body":{"injectables/SchoolService.html":{}}}],["datatask",{"_index":506,"title":{},"body":{"injectables/TaskService.html":{}}}],["datauser",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"controllers/LatihanController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["default",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":396,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["delete('/:task_id",{"_index":482,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":389,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleted",{"_index":435,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deleteschool",{"_index":433,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deletetask",{"_index":515,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetaskbyid",{"_index":446,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":483,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":453,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["development",{"_index":587,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["documentation",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":399,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":401,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":598,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":574,"title":{},"body":{"index.html":{}}}],["email",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/TaskService.html":{}}}],["enableshutdownhooks",{"_index":355,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":357,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":169,"title":{},"body":{"classes/AuthGuard.html":{}}}],["error",{"_index":426,"title":{},"body":{"injectables/SchoolService.html":{}}}],["example",{"_index":584,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":163,"title":{},"body":{"classes/AuthGuard.html":{}}}],["expired",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":158,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":378,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":379,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":406,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":385,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["format",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["found",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":572,"title":{},"body":{"index.html":{}}}],["function",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":566,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":476,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":386,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('profile",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["getalltask",{"_index":447,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlatihan",{"_index":326,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["gettaskbyid",{"_index":448,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":477,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":458,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":568,"title":{"index.html":{}},"body":{}}],["grow",{"_index":605,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":161,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":166,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":615,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpexception(\"bad",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(\"user",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":622,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.bad_request",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.found",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.unauthorized",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":297,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["identifier",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":363,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":508,"title":{},"body":{"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":358,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["inject",{"_index":498,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":501,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":65,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":583,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":586,"title":{},"body":{"index.html":{}}}],["interface",{"_index":436,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":437,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":289,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":290,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":301,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["isoptional",{"_index":291,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":524,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":292,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":287,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional",{"_index":282,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":284,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["join",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":179,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":619,"title":{},"body":{"index.html":{}}}],["latihan",{"_index":325,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["latihan.controller",{"_index":335,"title":{},"body":{"modules/LatihanModule.html":{}}}],["latihan.service",{"_index":329,"title":{},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{}}}],["latihan/latihan.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["latihancontroller",{"_index":323,"title":{"controllers/LatihanController.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"coverage.html":{}}}],["latihanmodule",{"_index":41,"title":{"modules/LatihanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LatihanModule.html":{},"modules.html":{},"overview.html":{}}}],["latihanservice",{"_index":328,"title":{"injectables/LatihanService.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":625,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":602,"title":{},"body":{"index.html":{}}}],["login",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":93,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["match",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":344,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":347,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["message",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LatihanService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":345,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":346,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":565,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":601,"title":{},"body":{"index.html":{}}}],["mode",{"_index":591,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":614,"title":{},"body":{"index.html":{}}}],["multer",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":620,"title":{},"body":{"index.html":{}}}],["name",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":579,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":624,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":500,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":521,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":172,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["new",{"_index":175,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["node.js",{"_index":571,"title":{},"body":{"index.html":{}}}],["npm",{"_index":585,"title":{},"body":{"index.html":{}}}],["number",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":356,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":603,"title":{},"body":{"index.html":{}}}],["optional",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":629,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":547,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":520,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":519,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":305,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":395,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:task_id",{"_index":479,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":393,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":280,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["placeholder",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{}}}],["please",{"_index":612,"title":{},"body":{"index.html":{}}}],["post",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["prisma.service",{"_index":352,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":362,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":42,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":206,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["process.on('beforeexit",{"_index":365,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":593,"title":{},"body":{"index.html":{}}}],["profile",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":570,"title":{},"body":{"index.html":{}}}],["project",{"_index":604,"title":{},"body":{"index.html":{}}}],["properties",{"_index":140,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":613,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":101,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":380,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":410,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":388,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":582,"title":{},"body":{"index.html":{}}}],["req",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["request",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":588,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":575,"title":{},"body":{"index.html":{}}}],["schema",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["school",{"_index":373,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"coverage.html":{}}}],["school.controller",{"_index":416,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":400,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":278,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:12",{"_index":285,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:16",{"_index":283,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:20",{"_index":286,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:7",{"_index":288,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":398,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":281,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":375,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":43,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":397,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["server",{"_index":576,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":577,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{}}}],["sponsors",{"_index":607,"title":{},"body":{"index.html":{}}}],["src/.../jwt_config.ts",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.ts",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":470,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":157,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:5",{"_index":164,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:9",{"_index":168,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:116",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:49",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":338,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:16",{"_index":342,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:9",{"_index":340,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":367,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":369,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:22",{"_index":372,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:9",{"_index":371,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config.ts",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/latihan/latihan.controller.ts",{"_index":324,"title":{},"body":{"controllers/LatihanController.html":{},"coverage.html":{}}}],["src/latihan/latihan.controller.ts:9",{"_index":327,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.module.ts",{"_index":334,"title":{},"body":{"modules/LatihanModule.html":{}}}],["src/latihan/latihan.service.ts",{"_index":336,"title":{},"body":{"injectables/LatihanService.html":{},"coverage.html":{}}}],["src/latihan/latihan.service.ts:5",{"_index":337,"title":{},"body":{"injectables/LatihanService.html":{}}}],["src/main.ts",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":351,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":359,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":361,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":277,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":518,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":374,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":376,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:11",{"_index":383,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:21",{"_index":384,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:33",{"_index":387,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:38",{"_index":394,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:43",{"_index":390,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":415,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":417,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:11",{"_index":419,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:24",{"_index":420,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:35",{"_index":421,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:50",{"_index":423,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:67",{"_index":422,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":418,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/task.ts",{"_index":438,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":295,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":523,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":444,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:14",{"_index":452,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:20",{"_index":457,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:26",{"_index":460,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:32",{"_index":464,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:38",{"_index":455,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":488,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":490,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:10",{"_index":491,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:16",{"_index":493,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:28",{"_index":495,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:50",{"_index":496,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:64",{"_index":497,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:78",{"_index":494,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":589,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":592,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":594,"title":{},"body":{"index.html":{}}}],["started",{"_index":569,"title":{"index.html":{}},"body":{}}],["starter",{"_index":581,"title":{},"body":{"index.html":{}}}],["statements",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":616,"title":{},"body":{"index.html":{}}}],["storage",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["sub",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["sukses",{"_index":517,"title":{},"body":{"injectables/TaskService.html":{}}}],["super",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":173,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":608,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":627,"title":{},"body":{"modules.html":{}}}],["table",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":269,"title":{"interfaces/Task.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":489,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:13",{"_index":302,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:5",{"_index":300,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:9",{"_index":303,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.find((task",{"_index":511,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.service",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task.task_id",{"_index":512,"title":{},"body":{"injectables/TaskService.html":{}}}],["task/task.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":298,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":439,"title":{},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":299,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":443,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":44,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskservice",{"_index":467,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":597,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":600,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":599,"title":{},"body":{"index.html":{}}}],["tests",{"_index":596,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":606,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":364,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar(req.user.id",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.latihanservice.getlatihan",{"_index":331,"title":{},"body":{"controllers/LatihanController.html":{}}}],["this.prisma.schools.create",{"_index":425,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":434,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":429,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":428,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":431,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.task.create",{"_index":505,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.delete",{"_index":516,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.findfirst",{"_index":510,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.findmany",{"_index":507,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.update",{"_index":514,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":503,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":404,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":405,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":407,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":411,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":409,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":474,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+task_id",{"_index":484,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":475,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+task_id",{"_index":478,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+task_id",{"_index":481,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":174,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["touch",{"_index":617,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["twitter",{"_index":623,"title":{},"body":{"index.html":{}}}],["type",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":522,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":580,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":170,"title":{},"body":{"classes/AuthGuard.html":{}}}],["undefined})@useinterceptors(undefined)@post('avatar",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":595,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":636,"title":{},"body":{"properties.html":{}}}],["update",{"_index":381,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["update(@param('id",{"_index":408,"title":{},"body":{"controllers/SchoolController.html":{}}}],["update(id",{"_index":391,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["updated",{"_index":432,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschool",{"_index":430,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":392,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetask",{"_index":513,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskbyid",{"_index":449,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(@param('task_id",{"_index":480,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskbyid(task_id",{"_index":461,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":462,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/image",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:task_id",{"_index":454,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":456,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:task_id",{"_index":459,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@patch('/:task_id",{"_index":463,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@post",{"_index":451,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(fileinterceptor('avatar",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":465,"title":{},"body":{"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{}}}],["user",{"_index":167,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["user_id",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":509,"title":{},"body":{"injectables/TaskService.html":{}}}],["validate",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":466,"title":{},"body":{"controllers/TaskController.html":{}}}],["validator",{"_index":293,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":637,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":634,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":590,"title":{},"body":{"index.html":{}}}],["website",{"_index":621,"title":{},"body":{"index.html":{}}}],["world",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":611,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LatihanModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LatihanModule } from './latihan/latihan.module';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [LatihanModule, TaskModule, PrismaModule, AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public')\n    }),\n    SchoolModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UploadedFile, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService: AuthService) { }\n\n    @Post('register')\n    async register(@Body() data: RegisterDto) {\n        return await this.authService.register(data)\n    }\n\n    @Post('login')\n    async login(@Body() data: LoginDto) {\n        return await this.authService.login(data)\n    }\n\n    @ApiBearerAuth(\"accessToken\")\n    @UseGuards(AuthGuard)\n    @Get('profile')\n    async profile(@Req() req) {\n        return await this.authService.profile(req.user.id)\n    }\n\n    @ApiBearerAuth(\"accessToken\")\n    @UseGuards(AuthGuard)\n    @ApiConsumes('multipart/form-data')\n    @ApiBody({\n        schema: {\n            type: 'object',\n            properties: {\n                avatar: {\n                    type: 'string',\n                    format: 'binary',\n                },\n            },\n        },\n    })\n    @UseInterceptors(FileInterceptor('avatar', {\n        storage: diskStorage({\n            destination: 'public/uploads/image',\n            filename: (req, file, cb) => {\n                cb(null, file.originalname)\n            }\n        })\n    }))\n    @Post('avatar')\n    async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n        return await this.authService.uploadAvatar(req.user.id, '/uploads/image/' + file.filename)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport'\n\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException()\n    }\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired\n      }\n    })\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\n\n@Injectable()\nexport class AuthService {\n    constructor(private prisma: PrismaService, private jwtService: JwtService) { }\n\n\n    /**\n     * Description placeholder\n     *\n     * @async\n     * @param {RegisterDto} data\n     * @returns {unknown}\n     */\n    async register(data: RegisterDto) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email\n            }\n        })\n        if (checkUserExists) {\n            throw new HttpException(\"User has registered\", HttpStatus.FOUND)\n        }\n        data.password = await hash(data.password, 12)\n        const cretedUser = await this.prisma.users.create({\n            data\n        })\n        if (cretedUser) {\n            return {\n                statusCode: HttpStatus.OK,\n                message: \"register successfully\"\n            }\n        }\n    }\n\n    /**\n     * Description placeholder\n     *\n     * @async\n     * @param {LoginDto} data\n     * @returns {unknown}\n     */\n    async login(data: LoginDto) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email\n            }\n        });\n        if (!checkUserExists) {\n            throw new HttpException(\"User not found\", HttpStatus.NOT_FOUND)\n        }\n        const checkPassword = await compare(data.password, checkUserExists.password)\n        if (checkPassword) {\n            const accessToken = this.generateJWT({\n                sub: checkUserExists.id,\n                name: checkUserExists.name,\n                email: checkUserExists.email\n            })\n            return {\n                statusCode: 200,\n                message: \"Login berhasil\",\n                accessToken: accessToken\n            }\n        } else {\n            throw new HttpException(\"User or password not match\", HttpStatus.UNAUTHORIZED)\n        }\n    }\n\n    /**\n     * Description placeholder\n     *\n     * @param {*} payload\n     * @returns {*}\n     */\n    generateJWT(payload: any) {\n        return this.jwtService.sign(payload, {\n            secret: jwt_config.secret,\n            expiresIn: jwt_config.expired\n        })\n    }\n\n    /**\n     * Description placeholder\n     *\n     * @async\n     * @param {number} user_id\n     * @returns {unknown}\n     */\n    async profile(user_id: number) {\n        const dataUser = await this.prisma.users.findFirst({\n            where: {\n                id: user_id\n            },\n            select: {\n                id: true,\n                name: true,\n                email: true,\n                avatar: true,\n                task: true\n            }\n        })\n        if (dataUser) {\n            return {\n                statusCode: HttpStatus.OK,\n                data: dataUser\n            }\n        }\n    }\n\n    async uploadAvatar(user_id: number, avatar) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                id: user_id\n            }\n        })\n        if (checkUserExists) {\n            const updateAvatar = await this.prisma.users.update({\n                data: {\n                    avatar: avatar\n                },\n                where: {\n                    id: user_id\n                }\n            })\n            if (updateAvatar) {\n                return {\n                    statuscode: HttpStatus.OK,\n                    message: 'Upload avatar berhasil',\n                }\n            }\n        }\n        throw new HttpException(\"Bad Request\", HttpStatus.BAD_REQUEST)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\"\n\nexport class CreateSchoolDto {\n\n    @IsString()\n    @IsNotEmpty()\n    school_name: string\n\n    @IsString()\n    @IsOptional()\n    @IsEmail()\n    email?: string\n\n    @IsString()\n    @IsOptional()\n    address?: string\n\n    @IsString()\n    @IsOptional()\n    phone?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\"\n\nexport class CreateTaskDto {\n\n    id_user: number;\n\n    @IsNotEmpty()\n    @IsString()\n    task_name: string\n\n    @IsNotEmpty()\n    @IsString()\n    task_description: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwt_config } from \"src/config/jwt_config\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt_config.secret\n        })\n    }\n\n    async validate(payload: any) {\n        return {\n            id: payload.sub,\n            email: payload.email,\n            expired: payload.exp\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LatihanController.html":{"url":"controllers/LatihanController.html","title":"controller - LatihanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LatihanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                latihan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatihan()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/latihan/latihan.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LatihanService } from './latihan.service';\n\n@Controller('latihan')\nexport class LatihanController {\n\n    constructor(private latihanService: LatihanService) { }\n    @Get()\n    getLatihan() {\n        return this.latihanService.getLatihan()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LatihanModule.html":{"url":"modules/LatihanModule.html","title":"module - LatihanModule","body":"\n                   \n\n\n\n\n    Modules\n    LatihanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\n\nLatihanService\n\nLatihanService\n\n\n\nLatihanModule\n\nLatihanModule\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/latihan/latihan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LatihanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LatihanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LatihanController } from './latihan.controller';\nimport { LatihanService } from './latihan.service';\n\n@Module({\n  controllers: [LatihanController],\n  providers: [LatihanService]\n})\nexport class LatihanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatihanService.html":{"url":"injectables/LatihanService.html","title":"injectable - LatihanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LatihanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \ngetLatihan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/latihan/latihan.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LatihanService {\n    getLatihan() {\n        return {\n            message: \"Latihan\"\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\"\n\nexport class LoginDto {\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication) {\n        process.on('beforeExit', async () => {\n            await app.close();\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\"\n\nexport class RegisterDto {\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    name: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:21\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:33\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\n\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) { }\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  /**\n   * Description placeholder\n   *\n   * @returns {*}\n   */\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n\n  /**\n   * Description placeholder\n   *\n   * @param {string} id\n   * @returns {*}\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateSchoolDto: UpdateSchoolDto) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n\n  constructor(private prisma: PrismaService) { }\n\n  async create(createSchoolDto: CreateSchoolDto) {\n    const createSchool = await this.prisma.schools.create({\n      data: createSchoolDto\n    })\n    if (createSchool) {\n      return {\n        statusCode: 200,\n        data: createSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async findAll() {\n    const dataSchool = await this.prisma.schools.findMany()\n    if (dataSchool) {\n      return {\n        statusCode: 200,\n        data: dataSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async findOne(id: number) {\n    const dataSchool = await this.prisma.schools.findFirst({\n      where: {\n        id\n      }\n    })\n    if (dataSchool) {\n      return {\n        statusCode: 200,\n        data: dataSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    const updateSchool = await this.prisma.schools.update({\n      data: updateSchoolDto,\n      where: {\n        id\n      }\n    })\n    if (updateSchool) {\n      return {\n        statusCode: 200,\n        message: \"Data updated successfully !\",\n        data: updateSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async remove(id: number) {\n    const deleteSchool = await this.prisma.schools.delete({\n      where: {\n        id\n      }\n    })\n    if (deleteSchool) {\n      return {\n        statusCode: 200,\n        message: \"Data deleted successfully !\",\n        data: deleteSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n    task_id: number\n    task_name: string\n    task_description: string\n}\nexport const task: Task[] = [\n    {\n        task_id: 1,\n        task_name: \"Task 1\",\n        task_description: \"Task 1\",\n    },\n    {\n        task_id: 2,\n        task_name: \"Task 2\",\n        task_description: \"Task 2\",\n    },\n    {\n        task_id: 3,\n        task_name: \"Task 3\",\n        task_description: \"Task \"\n    }\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id, body: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Get, Param, Patch, Delete, UsePipes, ValidationPipe, UseGuards } from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n    constructor(private taskService: TaskService) { }\n\n    //@UsePipes(ValidationPipe)\n    @UseGuards(AuthGuard)\n    @Post()\n    async createTask(@Body() body: CreateTaskDto) {\n        return await this.taskService.createTask(body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Get()\n    async getAllTask() {\n        return await this.taskService.getAllTask();\n    }\n\n    @UseGuards(AuthGuard)\n    @Get('/:task_id')\n    async getTaskById(@Param('task_id') task_id) {\n        return await this.taskService.getTaskById(+task_id);\n    }\n\n    @UseGuards(AuthGuard)\n    @Patch('/:task_id')\n    async updateTaskById(@Param('task_id') task_id, @Body() body: UpdateTaskDto) {\n        return await this.taskService.updateTaskById(+task_id, body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Delete('/:task_id')\n    async deleteTaskById(@Param('task_id') task_id) {\n        return await this.taskService.deleteTaskById(+task_id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService]\n})\nexport class TaskModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id: number, data: UpdateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { task } from './data/task';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\n\n\n@Injectable()\nexport class TaskService {\n\n    constructor(private prisma: PrismaService,\n        @Inject(REQUEST) private req: any,\n    ) { }\n\n    async createTask(data: CreateTaskDto) {\n        data.id_user = this.req.user.id\n        const createData = await this.prisma.task.create({\n            data: data,\n        });\n\n        return {\n            statusCode: 200,\n            data: createData\n        }\n    }\n\n    async getAllTask() {\n        const dataTask = await this.prisma.task.findMany({\n            where: {\n                id_user: this.req.user.id\n            },\n            include: {\n                users: {\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true,\n                        avatar: true\n                    }\n                }\n            }\n        })\n        return {\n            statusCode: 200,\n            data: dataTask\n        }\n    }\n\n    async getTaskById(task_id: number) {\n        const dataTask = await this.prisma.task.findFirst({\n            where: {\n                id: task_id,\n                id_user: this.req.user.id\n            }\n        })\n        return {\n            statusCode: 200,\n            data: dataTask\n            // data: task.find((task) => task.task_id == task_id)\n        }\n    }\n\n    async updateTaskById(task_id: number, data: UpdateTaskDto) {\n        data.id_user = this.req.user.id\n        const updateTask = await this.prisma.task.update({\n            where: {\n                id: task_id\n            },\n            data: data\n        })\n        return {\n            statusCode: 200,\n            data: updateTask\n        }\n    }\n\n    async deleteTaskById(task_id: number) {\n        const deleteTask = await this.prisma.task.delete({\n            where: {\n                id: task_id\n            }\n        })\n        return {\n            statusCode: 200,\n            data: deleteTask,\n            // data: task.find((task) => task.task_id == task_id),\n            message: \"Sukses delete data\"\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from \"class-validator\"\n\nexport class UpdateTaskDto {\n\n    id_user: number;\n\n    @IsOptional()\n    @IsString()\n    task_name: string\n\n    @IsOptional()\n    @IsString()\n    task_description: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/jwt_config.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/latihan/latihan.controller.ts\n            \n            controller\n            LatihanController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/latihan/latihan.service.ts\n            \n            injectable\n            LatihanService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            variable\n            task\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @prisma/client : ^5.15.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma : ^5.15.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LatihanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLatihanService\n\nLatihanService\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../jwt_config.ts)\n                        \n                        \n                            task   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt_config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: 'abcdefghij',\n    expired: 3600\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        task_id: 1,\n        task_name: \"Task 1\",\n        task_description: \"Task 1\",\n    },\n    {\n        task_id: 2,\n        task_name: \"Task 2\",\n        task_description: \"Task 2\",\n    },\n    {\n        task_id: 3,\n        task_name: \"Task 3\",\n        task_description: \"Task \"\n    }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
