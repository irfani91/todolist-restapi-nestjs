var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.173,1,2.138]],["body/controllers/AppController.html",[0,1.766,1,3.218,2,1.362,3,0.321,4,0.321,5,0.279,6,3.183,7,0.561,8,1.518,9,4.846,10,5.774,11,1.907,12,0.029,13,1.03,14,3.793,15,1.518,16,1.637,17,4.918,18,3.607,19,3.793,20,0.534,21,0.672,22,2.939,23,3.183,24,0.321,25,0.016,26,1.59,27,3.183,28,1.637,29,3.793,30,3.793,31,0.022,32,0.022]],["title/modules/AppModule.html",[33,1.008,34,2.138]],["body/modules/AppModule.html",[1,2.891,2,1.34,3,0.216,4,0.216,5,0.187,12,0.03,18,1.867,20,0.669,21,0.451,22,2.917,23,2.136,24,0.216,25,0.011,31,0.016,32,0.016,33,1.364,34,4.124,35,1.067,36,1.067,37,1.256,38,1.256,39,1.067,40,2.181,41,1.256,42,2.136,43,2.136,44,2.136,45,3.201,46,3.201,47,2.46,48,3.201,49,3.201,50,1.842,51,1.256,52,1.256,53,2.545,54,2.442,55,2.545,56,2.545,57,2.545,58,2.545,59,2.545,60,2.545,61,2.136,62,2.136,63,2.545,64,2.545,65,2.545,66,2.545,67,2.737,68,1.867,69,3.732,70,2.545,71,3.732,72,2.545,73,2.545,74,2.545,75,2.545,76,2.545,77,2.545,78,2.545,79,2.545,80,2.545,81,2.545,82,2.136,83,2.545,84,2.545,85,2.545,86,1.505,87,2.545,88,1.867]],["title/injectables/AppService.html",[22,1.76,89,0.866]],["body/injectables/AppService.html",[3,0.296,4,0.296,5,0.256,7,0.516,8,1.437,9,4.69,12,0.029,13,1.097,15,1.437,16,1.549,18,3.414,20,0.505,21,0.618,22,2.507,24,0.296,25,0.015,26,1.462,28,1.161,31,0.02,32,0.02,67,2.558,68,2.558,82,2.928,89,1.234,90,1.584,91,2.928,92,5.589,93,2.062,94,3.488,95,5.589,96,3.488,97,1.352,98,1.671,99,0.731,100,1.253,101,3.488,102,3.488,103,3.488,104,3.488,105,3.488,106,3.488,107,3.488,108,3.488,109,3.488,110,3.414,111,2.558,112,3.488,113,2.928,114,3.488,115,1.462,116,3.488]],["title/controllers/AuthController.html",[0,1.173,117,2.138]],["body/controllers/AuthController.html",[0,0.785,2,0.785,3,0.185,4,0.185,5,0.357,7,0.323,8,1.028,11,1.749,12,0.03,13,0.945,15,1.392,16,0.728,20,0.595,21,0.387,24,0.185,25,0.009,26,0.916,28,1.502,31,0.015,32,0.015,97,1.749,98,1.62,99,1.017,100,1.62,110,2.443,117,2.179,118,1.835,119,1.43,120,1.835,121,2.684,122,2.959,123,2.795,124,2.795,125,2.186,126,4.035,127,2.186,128,2.186,129,2.186,130,2.186,131,4.294,132,2.227,133,1.835,134,2.667,135,3.331,136,2.186,137,3.178,138,2.186,139,2.186,140,2.186,141,1.835,142,2.667,143,3.331,144,2.186,145,1.603,146,1.603,147,3.331,148,1.835,149,2.186,150,2.173,151,1.835,152,1.835,153,1.835,154,1.292,155,2.186,156,2.186,157,1.835,158,1.835,159,3.331,160,2.186,161,2.186,162,3.331,163,2.186,164,2.186,165,1.43,166,2.186,167,2.186,168,2.186,169,2.227,170,2.186,171,2.186,172,2.186,173,3.331,174,2.795,175,2.186,176,2.186,177,2.186,178,2.186,179,2.186,180,1.835,181,0.916,182,2.186,183,2.186,184,2.186,185,2.186,186,2.186,187,2.186,188,2.186,189,2.186,190,2.186,191,2.186,192,2.186,193,2.186,194,2.186,195,2.186,196,2.186]],["title/classes/AuthGuard.html",[25,0.014,154,1.931]],["body/classes/AuthGuard.html",[3,0.475,4,0.298,5,0.258,7,0.52,8,1.444,12,0.029,13,0.98,15,1.444,20,0.508,21,0.623,24,0.298,25,0.015,28,1.557,31,0.021,32,0.021,86,2.078,97,1.814,98,1.68,99,0.736,100,1.68,111,4.281,113,2.95,154,3.109,197,1.474,198,2.95,199,3.061,200,4.678,201,4.678,202,4.678,203,4.678,204,5.606,205,3.515,206,4.678,207,3.515,208,5.258,209,4.678,210,3.515,211,2.3,212,3.515,213,2.578]],["title/modules/AuthModule.html",[33,1.008,45,1.931]],["body/modules/AuthModule.html",[2,1.538,3,0.262,4,0.262,5,0.227,12,0.03,20,0.655,21,0.547,24,0.262,25,0.013,31,0.019,32,0.019,33,1.518,35,1.294,36,1.294,37,1.524,38,1.524,39,1.294,40,2.428,41,1.524,45,3.669,47,2.623,50,2.114,51,1.524,52,1.524,54,2.803,88,2.264,111,2.264,117,3.218,150,3.11,151,2.591,211,2.02,214,2.591,215,2.591,216,3.088,217,3.414,218,3.088,219,3.088,220,2.264,221,3.088,222,3.088,223,2.264,224,1.825,225,2.264,226,3.088,227,3.088,228,3.088,229,2.02,230,3.088,231,3.088,232,3.088,233,2.264,234,2.264,235,3.088,236,2.591,237,2.591]],["title/injectables/AuthService.html",[89,0.866,150,1.76]],["body/injectables/AuthService.html",[3,0.126,4,0.126,5,0.11,7,0.22,8,0.758,12,0.03,13,0.907,15,1.53,20,0.497,21,0.264,24,0.126,25,0.006,26,0.625,28,1.339,31,0.011,32,0.011,86,2.15,89,0.652,90,0.677,93,0.881,97,1.678,98,1.718,99,0.907,100,1.554,110,2.299,115,1.524,121,2.548,122,3.357,123,2.631,124,2.062,132,2.26,133,2.062,134,2.378,137,2.995,141,2.062,142,2.378,150,1.323,152,1.251,153,1.251,169,2.361,213,2.667,223,1.093,224,0.881,225,1.093,233,1.093,234,1.093,236,1.251,237,1.251,238,1.251,239,2.457,240,2.457,241,1.093,242,1.652,243,4.578,244,1.49,245,1.453,246,2.457,247,1.49,248,3.13,249,4.015,250,2.062,251,1.49,252,2.457,253,2.466,254,1.49,255,4.329,256,1.49,257,2.457,258,1.49,259,1.251,260,1.251,261,1.251,262,1.49,263,1.49,264,1.251,265,1.251,266,2.667,267,3.13,268,4.329,269,3.636,270,2.457,271,3.135,272,1.49,273,1.49,274,1.49,275,1.49,276,1.49,277,2.457,278,1.49,279,2.667,280,3.135,281,2.051,282,1.251,283,1.49,284,1.49,285,2.457,286,1.49,287,1.49,288,3.135,289,1.49,290,1.49,291,1.49,292,1.49,293,1.49,294,1.093,295,2.457,296,1.093,297,1.49,298,1.49,299,1.49,300,3.135,301,2.15,302,1.251,303,3.376,304,0.736,305,2.457,306,1.49,307,1.49,308,1.49,309,1.093,310,1.251]],["title/classes/CreateSchoolDto.html",[25,0.014,311,1.76]],["body/classes/CreateSchoolDto.html",[3,0.29,4,0.29,5,0.252,7,0.506,11,2.15,12,0.029,13,1.162,16,2.059,20,0.371,24,0.29,25,0.02,31,0.02,32,0.02,99,1.162,100,2.139,115,2.175,181,1.927,197,1.435,311,2.475,312,4.856,313,2.51,314,5.189,315,5.189,316,5.189,317,4.596,318,3.423,319,3.423,320,3.423,321,3.423,322,3.423,323,3.423,324,3.371,325,3.007,326,4.655,327,3.42,328,1.844]],["title/classes/CreateTaskDto.html",[25,0.014,329,1.931]],["body/classes/CreateTaskDto.html",[3,0.325,4,0.325,5,0.282,7,0.568,11,1.922,12,0.029,13,1.15,16,1.931,20,0.417,24,0.325,25,0.021,31,0.022,32,0.022,99,1.15,181,2.078,197,1.61,253,2.67,325,3.592,327,3.246,328,2.069,329,2.931,330,4.869,331,2.817,332,4.026,333,3.592,334,3.592,335,3.223,336,4.958,337,3.223,338,3.223]],["title/injectables/JwtStrategy.html",[89,0.866,217,1.931]],["body/injectables/JwtStrategy.html",[3,0.295,4,0.295,5,0.255,7,0.514,8,1.433,12,0.029,13,0.973,15,1.073,20,0.605,21,0.616,24,0.295,25,0.015,28,1.157,31,0.02,32,0.02,88,2.549,89,1.231,90,1.578,93,3.091,97,1.347,98,1.248,99,0.728,100,1.248,115,1.457,121,2.375,132,1.715,199,3.038,211,2.274,217,2.745,224,2.054,225,2.549,229,3.421,234,2.549,250,2.917,301,2.054,339,2.917,340,4.643,341,4.643,342,3.475,343,4.643,344,3.475,345,3.475,346,3.475,347,3.475,348,2.917,349,3.475,350,3.475,351,3.475,352,3.475,353,3.475,354,3.475,355,3.475,356,2.917,357,3.475]],["title/controllers/LatihanController.html",[0,1.173,358,2.138]],["body/controllers/LatihanController.html",[0,1.479,2,1.479,3,0.349,4,0.349,5,0.303,7,0.609,8,1.6,11,1.596,12,0.029,13,0.863,15,1.271,20,0.562,21,0.73,24,0.349,25,0.018,26,1.726,28,1.37,31,0.023,32,0.023,119,2.694,358,3.391,359,3.456,360,3.456,361,4.996,362,4.117,363,3.055,364,3.456,365,4.117,366,4.117]],["title/modules/LatihanModule.html",[33,1.008,46,1.931]],["body/modules/LatihanModule.html",[2,1.81,3,0.334,4,0.334,5,0.29,12,0.029,20,0.603,21,0.698,24,0.334,25,0.017,31,0.022,32,0.022,33,1.715,35,1.652,36,1.652,37,1.945,38,1.945,39,1.652,40,2.743,41,1.945,46,3.661,50,2.488,51,1.945,52,1.945,358,3.636,363,3.335,364,3.307,367,3.307,368,3.307,369,3.94,370,3.94]],["title/injectables/LatihanService.html",[89,0.866,363,1.76]],["body/injectables/LatihanService.html",[3,0.36,4,0.36,5,0.313,7,0.629,8,1.632,12,0.029,13,0.891,15,1.312,16,1.415,20,0.461,21,0.753,24,0.36,25,0.018,28,1.415,31,0.023,32,0.023,89,1.402,90,1.931,281,3.46,360,3.568,361,5.054,363,2.848,371,3.568,372,4.252]],["title/classes/LoginDto.html",[25,0.014,134,1.931]],["body/classes/LoginDto.html",[3,0.327,4,0.327,5,0.284,7,0.57,11,1.927,12,0.029,13,1.041,16,1.934,20,0.539,24,0.327,25,0.021,31,0.022,32,0.022,99,1.041,115,2.306,134,2.939,165,2.523,181,2.084,197,1.617,296,4.034,324,3.646,325,3.599,327,2.939,328,2.077,373,3.237,374,3.857,375,3.857,376,3.237,377,3.857,378,4.617,379,3.237,380,3.237,381,3.237,382,3.237]],["title/modules/PrismaModule.html",[33,1.008,47,1.484]],["body/modules/PrismaModule.html",[3,0.33,4,0.33,5,0.286,12,0.029,20,0.542,21,0.689,24,0.33,25,0.017,31,0.022,32,0.022,33,1.705,35,1.63,36,1.63,37,1.92,38,1.92,39,1.63,40,2.726,41,2.726,47,2.851,50,2.467,51,1.92,52,1.92,242,2.978,383,3.264,384,3.264,385,3.264,386,3.89,387,3.89]],["title/injectables/PrismaService.html",[89,0.866,242,1.484]],["body/injectables/PrismaService.html",[3,0.305,4,0.305,5,0.265,7,0.532,8,1.466,12,0.029,13,0.995,15,1.466,20,0.516,21,0.638,24,0.305,25,0.015,31,0.021,32,0.021,89,1.26,90,1.634,97,1.395,98,1.292,99,0.754,100,1.292,121,2.799,169,2.345,199,3.109,242,2.158,388,3.02,389,5.32,390,4.751,391,6.042,392,4.751,393,5.658,394,3.598,395,3.02,396,3.598,397,3.02,398,3.598,399,3.598,400,3.598,401,3.598]],["title/classes/RegisterDto.html",[25,0.014,142,1.931]],["body/classes/RegisterDto.html",[3,0.306,4,0.306,5,0.266,7,0.534,11,2.066,12,0.029,13,1.117,16,2.013,20,0.517,24,0.306,25,0.02,31,0.021,32,0.021,98,1.914,99,1.117,115,2.234,142,2.816,165,2.364,181,1.997,197,1.514,296,3.909,324,3.494,325,3.708,327,3.35,328,1.946,376,3.032,378,4.756,379,3.032,380,3.032,381,3.032,382,3.032,402,3.032,403,3.613,404,3.613,405,3.613,406,3.613,407,3.613]],["title/classes/School.html",[25,0.014,408,2.138]],["body/classes/School.html",[3,0.417,4,0.417,5,0.361,12,0.027,24,0.417,25,0.021,31,0.025,32,0.025,197,2.06,408,3.777,409,4.125]],["title/controllers/SchoolController.html",[0,1.173,410,2.138]],["body/controllers/SchoolController.html",[0,0.814,2,0.814,3,0.192,4,0.192,5,0.167,7,0.335,8,1.057,11,1.913,12,0.03,13,1.034,15,1.663,16,1.926,20,0.499,21,0.402,24,0.192,25,0.01,26,0.95,27,1.903,28,1.643,31,0.015,32,0.015,97,1.782,98,1.651,99,0.963,100,1.651,119,1.484,121,2.788,132,2.436,145,2.511,146,3.026,169,2.436,248,3.008,249,3.858,266,2.511,301,3.185,311,2.795,408,1.484,410,2.241,411,1.903,412,2.511,413,3.858,414,2.874,415,2.874,416,2.874,417,1.903,418,2.267,419,2.267,420,1.903,421,3.424,422,2.267,423,1.903,424,3.424,425,2.267,426,1.903,427,3.279,428,3.424,429,2.267,430,1.903,431,1.663,432,2.222,433,1.903,434,1.484,435,2.511,436,1.484,437,2.267,438,2.267,439,2.267,440,2.267,441,2.267,442,2.267,443,2.267,444,2.267,445,2.267,446,2.267]],["title/modules/SchoolModule.html",[33,1.008,48,1.931]],["body/modules/SchoolModule.html",[2,1.729,3,0.311,4,0.311,5,0.27,12,0.029,20,0.619,21,0.65,24,0.311,25,0.016,31,0.021,32,0.021,33,1.658,35,1.539,36,1.539,37,1.812,38,1.812,39,1.539,40,2.651,41,1.812,47,2.759,48,3.713,50,2.376,51,1.812,52,1.812,54,3.15,220,2.692,410,3.515,432,3.272,433,3.081,447,3.081,448,3.671,449,3.081,450,3.671,451,3.671]],["title/injectables/SchoolService.html",[89,0.866,432,1.76]],["body/injectables/SchoolService.html",[3,0.13,4,0.13,5,0.113,7,0.227,8,0.778,12,0.03,13,1.015,15,1.432,16,1.463,20,0.402,21,0.273,24,0.13,25,0.007,26,0.645,28,1.612,31,0.011,32,0.011,86,2.744,89,0.669,90,0.699,93,0.909,97,1.799,98,1.666,99,0.972,100,1.666,115,1.715,121,2.717,132,2.291,137,3.531,169,2.291,213,3.404,241,1.128,242,1.683,245,1.491,253,2.701,259,4.066,260,1.291,267,3.037,279,3.404,281,2.097,282,2.689,294,3.404,301,2.598,309,3.404,310,3.895,311,2.367,412,1.849,413,3.111,414,2.116,415,2.116,416,2.116,417,2.116,420,2.116,423,2.116,426,2.116,427,2.864,432,1.358,434,1.006,435,1.849,436,1.006,452,1.291,453,2.521,454,2.521,455,1.538,456,1.538,457,1.538,458,2.521,459,1.538,460,1.538,461,1.538,462,2.521,463,1.538,464,1.538,465,1.538,466,3.204,467,1.538,468,4.845,469,5.016,470,1.538,471,2.521,472,3.204,473,1.538,474,1.538,475,4.395,476,2.521,477,2.521,478,1.538,479,1.538,480,1.538]],["title/interfaces/Task.html",[304,1.613,481,2.138]],["body/interfaces/Task.html",[3,0.305,4,0.305,5,0.265,7,0.532,12,0.029,16,2.011,24,0.403,31,0.021,32,0.021,99,1.114,181,1.992,253,2.865,267,2.354,304,3.154,333,4.032,334,4.032,481,2.354,482,3.598,483,2.639,484,4.032,485,3.901,486,4.465,487,3.988]],["title/controllers/TaskController.html",[0,1.173,488,2.138]],["body/controllers/TaskController.html",[0,0.863,2,0.863,3,0.204,4,0.204,5,0.177,7,0.356,8,1.104,11,1.962,12,0.029,13,1.06,15,1.562,20,0.549,21,0.426,24,0.204,25,0.01,26,1.008,28,1.684,31,0.016,32,0.016,97,1.835,98,1.7,99,0.75,100,1.7,119,1.573,121,2.817,132,2.498,145,4.14,146,2.625,148,2.018,154,1.422,169,2.498,174,4.247,266,1.764,304,1.187,329,2.799,430,2.018,431,1.764,434,1.573,436,1.573,484,3.471,488,2.342,489,2.018,490,3.003,491,3.003,492,3.973,493,3.003,494,3.003,495,2.405,496,2.405,497,2.405,498,2.018,499,2.405,500,2.405,501,2.405,502,2.405,503,2.018,504,2.405,505,2.405,506,2.018,507,2.799,508,2.405,509,2.405,510,2.405,511,2.405,512,2.302,513,2.018,514,3.003,515,2.405,516,2.405,517,2.405,518,2.405,519,2.405,520,2.405,521,2.405,522,2.405,523,2.405,524,2.405,525,2.405,526,2.405,527,2.405,528,2.405,529,2.405]],["title/modules/TaskModule.html",[33,1.008,49,1.931]],["body/modules/TaskModule.html",[2,1.729,3,0.311,4,0.311,5,0.27,12,0.029,20,0.619,21,0.65,24,0.311,25,0.016,31,0.021,32,0.021,33,1.658,35,1.539,36,1.539,37,1.812,38,1.812,39,1.539,40,2.651,41,1.812,47,2.759,49,3.713,50,2.376,51,1.812,52,1.812,54,3.15,220,2.692,488,3.515,512,3.272,513,3.081,530,3.081,531,3.081,532,3.671,533,3.671,534,3.671]],["title/injectables/TaskService.html",[89,0.866,512,1.76]],["body/injectables/TaskService.html",[3,0.159,4,0.159,5,0.138,7,0.277,8,0.913,12,0.03,13,1.007,15,1.396,20,0.522,21,0.332,24,0.159,25,0.008,26,0.786,28,1.506,31,0.013,32,0.013,89,0.784,90,0.852,93,1.109,97,1.754,98,1.726,99,0.948,100,1.625,115,0.786,121,2.687,122,1.376,131,3.074,132,2.233,137,3.909,169,2.233,241,1.376,242,1.888,245,1.749,253,2.89,261,1.575,265,1.575,267,2.96,279,3.318,281,1.228,294,3.318,301,2.458,302,1.575,303,3.489,304,0.926,309,1.376,329,2.458,332,2.17,431,1.376,434,1.228,436,1.228,484,3.412,490,2.483,491,2.483,492,3.489,493,2.483,494,2.483,498,2.483,503,2.483,506,2.483,507,2.458,512,1.593,514,2.483,535,1.575,536,1.876,537,2.958,538,1.876,539,1.876,540,1.876,541,1.876,542,1.876,543,1.876,544,1.876,545,1.575,546,1.876,547,2.958,548,4.158,549,2.958,550,1.876,551,4.158,552,1.876,553,1.876,554,1.876,555,1.876,556,2.958,557,2.958,558,2.958,559,1.876,560,2.958,561,1.876,562,1.876]],["title/classes/UpdateSchoolDto.html",[25,0.014,427,1.931]],["body/classes/UpdateSchoolDto.html",[3,0.382,4,0.382,5,0.331,12,0.029,20,0.594,24,0.382,25,0.019,31,0.024,32,0.024,197,1.888,199,3.584,311,2.425,313,3.303,412,3.303,427,3.238,435,3.303,563,3.779,564,5.478,565,4.503,566,3.779,567,3.779]],["title/classes/UpdateTaskDto.html",[25,0.014,507,1.931]],["body/classes/UpdateTaskDto.html",[3,0.325,4,0.325,5,0.282,7,0.568,11,1.922,12,0.029,13,1.15,16,1.931,20,0.417,24,0.325,25,0.021,31,0.022,32,0.022,99,1.15,181,2.078,197,1.61,253,2.67,326,4.608,327,3.246,328,2.069,331,2.817,332,4.026,333,3.592,334,3.592,335,3.223,337,3.223,338,3.223,507,2.931,568,4.869,569,4.958]],["title/coverage.html",[570,3.266]],["body/coverage.html",[0,1.917,1,1.796,5,0.202,6,2.303,12,0.029,22,1.478,25,0.025,31,0.017,32,0.017,39,1.15,86,1.622,89,1.518,91,2.303,99,0.575,117,1.796,118,2.303,134,1.622,142,1.622,150,1.478,154,1.622,198,2.303,217,1.622,224,1.622,238,2.303,242,1.246,304,1.945,311,1.478,312,2.303,313,2.891,329,1.622,330,2.303,331,2.891,339,2.303,358,1.796,359,2.303,363,1.478,371,2.303,373,2.303,388,2.303,402,2.303,408,1.796,409,2.303,410,1.796,411,2.303,427,1.622,432,1.478,452,2.303,481,1.796,483,2.891,488,1.796,489,2.303,507,1.622,512,1.478,535,2.303,563,2.303,568,2.303,570,2.013,571,2.744,572,2.744,573,2.744,574,6.532,575,5.339,576,5.339,577,3.941,578,2.744,579,2.744,580,2.303,581,3.941,582,5.339,583,3.941,584,2.303,585,2.744,586,2.744,587,2.744,588,2.744,589,2.744,590,2.744,591,2.744,592,2.744]],["title/dependencies.html",[36,1.647,593,2.292]],["body/dependencies.html",[12,0.03,21,0.661,25,0.021,31,0.021,32,0.021,36,1.564,61,3.131,62,3.131,67,2.736,68,2.736,157,3.131,158,3.131,165,2.441,211,2.441,223,2.736,229,2.441,245,2.205,264,3.131,328,2.009,348,4.083,397,3.131,545,3.131,566,3.131,567,3.131,594,3.731,595,5.414,596,3.731,597,3.731,598,3.731,599,3.731,600,4.865,601,3.731,602,3.731,603,3.731,604,3.731,605,3.731,606,3.731,607,3.731,608,3.731,609,3.731,610,3.731,611,3.731,612,3.731,613,3.731,614,3.731,615,3.731]],["title/miscellaneous/functions.html",[616,1.787,617,3.297]],["body/miscellaneous/functions.html",[7,0.735,12,0.026,31,0.026,32,0.026,39,2.581,584,4.17,616,3.251,617,4.17,618,4.969]],["title/index.html",[7,0.404,619,2.731,620,2.731]],["body/index.html",[12,0.029,31,0.021,32,0.021,115,1.474,120,2.95,229,2.3,245,2.078,248,2.3,395,2.95,570,2.578,621,3.515,622,3.515,623,3.515,624,4.678,625,3.515,626,3.515,627,3.515,628,3.515,629,3.515,630,3.515,631,4.678,632,3.515,633,3.515,634,3.515,635,4.678,636,3.515,637,5.258,638,6.126,639,3.515,640,3.515,641,6.223,642,3.515,643,3.515,644,4.678,645,3.515,646,3.515,647,3.515,648,4.678,649,4.678,650,3.515,651,3.515,652,3.515,653,3.515,654,3.515,655,3.515,656,4.678,657,3.515,658,3.515,659,3.515]],["title/modules.html",[35,1.867]],["body/modules.html",[12,0.024,31,0.024,32,0.024,34,2.89,35,1.851,45,2.611,46,2.611,47,2.006,48,2.611,49,2.611,660,6.372,661,6.372,662,6.372,663,6.372]],["title/overview.html",[664,3.738]],["body/overview.html",[2,1.079,12,0.029,22,2.612,31,0.019,32,0.019,33,0.928,34,4.179,35,1.26,36,1.26,37,1.484,38,1.484,39,1.26,40,1.484,41,1.484,42,2.523,43,2.523,44,2.523,45,3.603,46,3.267,47,2.768,48,3.475,49,3.475,50,2.075,51,1.484,52,1.484,90,1.365,150,2.612,197,1.26,214,2.523,215,2.523,217,2.867,242,2.67,363,2.612,367,2.523,368,2.523,383,2.523,384,2.523,385,2.523,432,2.612,447,2.523,449,2.523,481,1.967,485,2.205,512,2.612,530,2.523,531,2.523,664,2.523,665,3.006,666,3.006,667,3.006,668,3.006]],["title/properties.html",[181,1.647,593,2.292]],["body/properties.html",[12,0.029,31,0.025,32,0.025,181,2.049,248,3.199,669,4.889,670,4.889,671,4.889,672,4.889,673,4.889]],["title/miscellaneous/variables.html",[616,1.787,674,3.297]],["body/miscellaneous/variables.html",[7,0.57,12,0.029,31,0.022,32,0.022,99,1.041,180,3.237,224,2.939,233,2.828,304,3.165,333,3.599,334,3.599,356,3.237,483,2.828,484,3.599,485,4.034,486,4.617,487,4.172,580,3.237,616,2.523,674,3.237,675,3.857,676,3.857,677,4.971,678,4.971,679,3.857,680,3.857]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":670,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":485,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":486,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["2.0.2",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["25:25",{"_index":657,"title":{},"body":{"index.html":{}}}],["3",{"_index":487,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":666,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["5.15.0",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["57",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":665,"title":{},"body":{"overview.html":{}}}],["6.9.13",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":667,"title":{},"body":{"overview.html":{}}}],["7.3.1",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":668,"title":{},"body":{"overview.html":{}}}],["8025:80",{"_index":658,"title":{},"body":{"index.html":{}}}],["abcdefghij",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["adapter",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["address",{"_index":314,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["api",{"_index":623,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth(\"accesstoken",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiconsumes('multipart/form",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@get('profile",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('multipart/form",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":378,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":374,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":405,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isemail",{"_index":403,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(6)@maxlength(20",{"_index":376,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apitags",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":395,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":401,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":34,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assert",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":117,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":154,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":210,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":200,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authmodule",{"_index":45,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":673,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":150,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["avatar(@req",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["bcrypt",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berhasil",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["binary",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":663,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":660,"title":{},"body":{"modules.html":{}}}],["canactivate",{"_index":201,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":203,"title":{},"body":{"classes/AuthGuard.html":{}}}],["catch",{"_index":479,"title":{},"body":{"injectables/SchoolService.html":{}}}],["cb",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkpassword",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.email",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.id",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.name",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.password",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":25,"title":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":197,"title":{},"body":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_latihanmodule",{"_index":367,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_latihanmodule_providers",{"_index":368,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":383,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":384,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":385,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":447,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":448,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":449,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":530,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":532,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":531,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc",{"_index":633,"title":{},"body":{"index.html":{}}}],["const",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(mail",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(prisma",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["context",{"_index":113,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('latihan",{"_index":365,"title":{},"body":{"controllers/LatihanController.html":{}}}],["controller('school",{"_index":437,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":516,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":570,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":412,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":438,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":417,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createdata",{"_index":549,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschool",{"_index":466,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":311,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":490,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":518,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":495,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":537,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":329,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["creteduser",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":627,"title":{},"body":{"index.html":{}}}],["data",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data')@apibody({schema",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.email",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":547,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["data/task",{"_index":544,"title":{},"body":{"injectables/TaskService.html":{}}}],["dataschool",{"_index":469,"title":{},"body":{"injectables/SchoolService.html":{}}}],["datatask",{"_index":551,"title":{},"body":{"injectables/TaskService.html":{}}}],["datauser",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"controllers/LatihanController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["default",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":431,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["delete('/:task_id",{"_index":527,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":424,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleted",{"_index":477,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deleteschool",{"_index":475,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deletetask",{"_index":560,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetaskbyid",{"_index":491,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":528,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":498,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":36,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["development",{"_index":640,"title":{},"body":{"index.html":{}}}],["dir",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["diskstorage",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["docker",{"_index":635,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":434,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":436,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":650,"title":{},"body":{"index.html":{}}}],["email",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["emailsaya@gmail.com",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["enableshutdownhooks",{"_index":390,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":392,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":208,"title":{},"body":{"classes/AuthGuard.html":{}}}],["error",{"_index":468,"title":{},"body":{"injectables/SchoolService.html":{}}}],["error.message",{"_index":480,"title":{},"body":{"injectables/SchoolService.html":{}}}],["example",{"_index":637,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":204,"title":{},"body":{"classes/AuthGuard.html":{}}}],["expired",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":199,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":413,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findemail",{"_index":453,"title":{},"body":{"injectables/SchoolService.html":{}}}],["findemail(email",{"_index":458,"title":{},"body":{"injectables/SchoolService.html":{}}}],["findone",{"_index":414,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":441,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":420,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["format",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["found",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["functional",{"_index":625,"title":{},"body":{"index.html":{}}}],["functions",{"_index":617,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":521,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":421,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('profile",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('test",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["getalltask",{"_index":492,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlatihan",{"_index":361,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["gettaskbyid",{"_index":493,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":522,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":503,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":619,"title":{"index.html":{}},"body":{}}],["handlebars",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["handlerequest",{"_index":202,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":206,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["httpexception",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpexception(\"bad",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(\"user",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.bad_request",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.found",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.unauthorized",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":332,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["identifier",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":398,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":553,"title":{},"body":{"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":393,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["inject",{"_index":543,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":546,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":636,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":639,"title":{},"body":{"index.html":{}}}],["interface",{"_index":481,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":482,"title":{},"body":{"interfaces/Task.html":{}}}],["irfan@gmail.com",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["isemail",{"_index":324,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":325,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":336,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["isoptional",{"_index":326,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":569,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":327,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":322,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional",{"_index":317,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":319,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["john",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["john@gmail.com",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["join",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":217,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["latihan",{"_index":360,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["latihan.controller",{"_index":370,"title":{},"body":{"modules/LatihanModule.html":{}}}],["latihan.service",{"_index":364,"title":{},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{}}}],["latihan/latihan.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["latihancontroller",{"_index":358,"title":{"controllers/LatihanController.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"coverage.html":{}}}],["latihanmodule",{"_index":46,"title":{"modules/LatihanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LatihanModule.html":{},"modules.html":{},"overview.html":{}}}],["latihanservice",{"_index":363,"title":{"injectables/LatihanService.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":671,"title":{},"body":{"properties.html":{}}}],["list",{"_index":621,"title":{},"body":{"index.html":{}}}],["local",{"_index":654,"title":{},"body":{"index.html":{}}}],["login",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":134,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["mail",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["mailermodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forroot",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["match",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":379,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":382,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["message",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LatihanService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["migration",{"_index":630,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":380,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":381,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":616,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":644,"title":{},"body":{"index.html":{}}}],["module",{"_index":33,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":35,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["multer",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["name",{"_index":98,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nestjs",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":545,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":566,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":211,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["new",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["nodemailer",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["noreply@emailsaya.com",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["npm",{"_index":638,"title":{},"body":{"index.html":{}}}],["number",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":391,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":100,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["options",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":664,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":656,"title":{},"body":{"index.html":{}}}],["package",{"_index":593,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":565,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":564,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":430,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:task_id",{"_index":524,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":428,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":315,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["placeholder",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{}}}],["post",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.service",{"_index":387,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":397,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":465,"title":{},"body":{"injectables/SchoolService.html":{}}}],["prismaclient",{"_index":389,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":47,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":242,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["process.cwd",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["process.on('beforeexit",{"_index":400,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":646,"title":{},"body":{"index.html":{}}}],["profile",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":181,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":142,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["registersuccess",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["relationanl",{"_index":629,"title":{},"body":{"index.html":{}}}],["remove",{"_index":415,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":445,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":423,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["removebyemail",{"_index":454,"title":{},"body":{"injectables/SchoolService.html":{}}}],["removebyemail(email",{"_index":462,"title":{},"body":{"injectables/SchoolService.html":{}}}],["req",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["request",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["rest",{"_index":622,"title":{},"body":{"index.html":{}}}],["results",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rm",{"_index":655,"title":{},"body":{"index.html":{}}}],["rnwood/smtp4dev",{"_index":659,"title":{},"body":{"index.html":{}}}],["rootpath",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":641,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["school",{"_index":408,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"coverage.html":{}}}],["school.controller",{"_index":451,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":435,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":313,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:12",{"_index":320,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:16",{"_index":318,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:20",{"_index":321,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:7",{"_index":323,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":433,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":316,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":410,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":48,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":432,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["send",{"_index":628,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["signoptions",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":624,"title":{},"body":{"index.html":{}}}],["smtp",{"_index":653,"title":{},"body":{"index.html":{}}}],["smtp://localhost:25",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["src/.../jwt_config.ts",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.ts",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:13",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:5",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":515,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":198,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:5",{"_index":205,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:9",{"_index":207,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:116",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:49",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":373,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:16",{"_index":377,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:9",{"_index":375,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":402,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":404,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:22",{"_index":407,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:9",{"_index":406,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config.ts",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/latihan/latihan.controller.ts",{"_index":359,"title":{},"body":{"controllers/LatihanController.html":{},"coverage.html":{}}}],["src/latihan/latihan.controller.ts:9",{"_index":362,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.module.ts",{"_index":369,"title":{},"body":{"modules/LatihanModule.html":{}}}],["src/latihan/latihan.service.ts",{"_index":371,"title":{},"body":{"injectables/LatihanService.html":{},"coverage.html":{}}}],["src/latihan/latihan.service.ts:5",{"_index":372,"title":{},"body":{"injectables/LatihanService.html":{}}}],["src/main.ts",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":386,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":388,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":394,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":396,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":312,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":563,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":409,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":411,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:11",{"_index":418,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:21",{"_index":419,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:33",{"_index":422,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:38",{"_index":429,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:43",{"_index":425,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":450,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":452,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:11",{"_index":456,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:24",{"_index":457,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:35",{"_index":460,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:50",{"_index":464,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:67",{"_index":461,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":455,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:83",{"_index":459,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:98",{"_index":463,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/task.ts",{"_index":483,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":330,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":568,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":489,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:14",{"_index":497,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:20",{"_index":502,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:26",{"_index":505,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:32",{"_index":509,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:38",{"_index":500,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":533,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":535,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:10",{"_index":536,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:16",{"_index":538,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:28",{"_index":540,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:50",{"_index":541,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:64",{"_index":542,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:78",{"_index":539,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":642,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":645,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":647,"title":{},"body":{"index.html":{}}}],["started",{"_index":620,"title":{"index.html":{}},"body":{}}],["statements",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["storage",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strict",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["sub",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["success",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["successfully",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["such",{"_index":626,"title":{},"body":{"index.html":{}}}],["sukses",{"_index":562,"title":{},"body":{"injectables/TaskService.html":{}}}],["super",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":212,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":661,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":662,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":634,"title":{},"body":{"index.html":{}}}],["table",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":304,"title":{"interfaces/Task.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":534,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":514,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":331,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:13",{"_index":337,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:5",{"_index":335,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:9",{"_index":338,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.find((task",{"_index":556,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.service",{"_index":513,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task.task_id",{"_index":557,"title":{},"body":{"injectables/TaskService.html":{}}}],["task/task.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":333,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":484,"title":{},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":334,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":488,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":49,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskservice",{"_index":512,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["test",{"_index":649,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":652,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":651,"title":{},"body":{"index.html":{}}}],["testing",{"_index":632,"title":{},"body":{"index.html":{}}}],["testregistersuccess",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["tests",{"_index":648,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":399,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.registersuccess",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar(req.user.id",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.latihanservice.getlatihan",{"_index":366,"title":{},"body":{"controllers/LatihanController.html":{}}}],["this.mail.sendmail",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prisma.schools.create",{"_index":467,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":476,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":471,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":470,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":473,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.task.create",{"_index":550,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.delete",{"_index":561,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.findfirst",{"_index":555,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.findmany",{"_index":552,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.update",{"_index":559,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":548,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":439,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":440,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":442,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":446,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":444,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":519,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+task_id",{"_index":529,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":520,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+task_id",{"_index":523,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+task_id",{"_index":526,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":213,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["transformer",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["try",{"_index":478,"title":{},"body":{"injectables/SchoolService.html":{}}}],["type",{"_index":99,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":567,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["unauthorizedexception",{"_index":209,"title":{},"body":{"classes/AuthGuard.html":{}}}],["undefined})@useinterceptors(undefined)@post('avatar",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":631,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":672,"title":{},"body":{"properties.html":{}}}],["update",{"_index":416,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["update(@param('id",{"_index":443,"title":{},"body":{"controllers/SchoolController.html":{}}}],["update(id",{"_index":426,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["updated",{"_index":474,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschool",{"_index":472,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":427,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetask",{"_index":558,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskbyid",{"_index":494,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(@param('task_id",{"_index":525,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskbyid(task_id",{"_index":506,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":507,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/image",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:task_id",{"_index":499,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":501,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:task_id",{"_index":504,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@patch('/:task_id",{"_index":508,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@post",{"_index":496,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(fileinterceptor('avatar",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":510,"title":{},"body":{"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":517,"title":{},"body":{"controllers/TaskController.html":{}}}],["user",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["user_id",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":554,"title":{},"body":{"injectables/TaskService.html":{}}}],["validate",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":511,"title":{},"body":{"controllers/TaskController.html":{}}}],["validator",{"_index":328,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":674,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":669,"title":{},"body":{"properties.html":{}}}],["void",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["watch",{"_index":643,"title":{},"body":{"index.html":{}}}],["world",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                testRegisterSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        testRegisterSuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    testRegisterSuccess()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test-mail')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('test-mail')\n  testRegisterSuccess() {\n    return this.appService.registerSuccess()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LatihanModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LatihanModule } from './latihan/latihan.module';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\nimport { MailerModule } from '@nestjs-modules/mailer'\nimport { HandlebarsAdapter } from \"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\";\nimport { strict } from 'assert';\n\n@Module({\n  imports: [LatihanModule, TaskModule, PrismaModule, AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public')\n    }),\n    SchoolModule,\n    MailerModule.forRoot({\n      transport: 'smtp://localhost:25',\n      defaults: {\n        from: 'noreply@emailsaya.com',\n      },\n      template: {\n        dir: process.cwd() + '/mail',\n        adapter: new HandlebarsAdapter(),\n        options: {\n          strict: false\n        }\n      }\n    })\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                registerSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mail: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerSuccess\n                        \n                    \n                \n            \n            \n                \nregisterSuccess()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n\n  constructor(private mail: MailerService) { }\n\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  registerSuccess() {\n    this.mail.sendMail({\n      to: \"john@gmail.com\",\n      from: \"emailsaya@gmail.com\",\n      subject: \"Register User\",\n      template: \"register-success\",\n      context: {\n        name: \"John\",\n        email: \"irfan@gmail.com\"\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UploadedFile, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService: AuthService) { }\n\n    @Post('register')\n    async register(@Body() data: RegisterDto) {\n        return await this.authService.register(data)\n    }\n\n    @Post('login')\n    async login(@Body() data: LoginDto) {\n        return await this.authService.login(data)\n    }\n\n    @ApiBearerAuth(\"accessToken\")\n    @UseGuards(AuthGuard)\n    @Get('profile')\n    async profile(@Req() req) {\n        return await this.authService.profile(req.user.id)\n    }\n\n    @ApiBearerAuth(\"accessToken\")\n    @UseGuards(AuthGuard)\n    @ApiConsumes('multipart/form-data')\n    @ApiBody({\n        schema: {\n            type: 'object',\n            properties: {\n                avatar: {\n                    type: 'string',\n                    format: 'binary',\n                },\n            },\n        },\n    })\n    @UseInterceptors(FileInterceptor('avatar', {\n        storage: diskStorage({\n            destination: 'public/uploads/image',\n            filename: (req, file, cb) => {\n                cb(null, file.originalname)\n            }\n        })\n    }))\n    @Post('avatar')\n    async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n        return await this.authService.uploadAvatar(req.user.id, '/uploads/image/' + file.filename)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport'\n\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException()\n    }\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired\n      }\n    })\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\n\n@Injectable()\nexport class AuthService {\n    constructor(private prisma: PrismaService, private jwtService: JwtService) { }\n\n\n    /**\n     * Description placeholder\n     *\n     * @async\n     * @param {RegisterDto} data\n     * @returns {unknown}\n     */\n    async register(data: RegisterDto) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email\n            }\n        })\n        if (checkUserExists) {\n            throw new HttpException(\"User has registered\", HttpStatus.FOUND)\n        }\n        data.password = await hash(data.password, 12)\n        const cretedUser = await this.prisma.users.create({\n            data\n        })\n        if (cretedUser) {\n            return {\n                statusCode: HttpStatus.OK,\n                message: \"register successfully\"\n            }\n        }\n    }\n\n    /**\n     * Description placeholder\n     *\n     * @async\n     * @param {LoginDto} data\n     * @returns {unknown}\n     */\n    async login(data: LoginDto) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email\n            }\n        });\n        if (!checkUserExists) {\n            throw new HttpException(\"User not found\", HttpStatus.NOT_FOUND)\n        }\n        const checkPassword = await compare(data.password, checkUserExists.password)\n        if (checkPassword) {\n            const accessToken = this.generateJWT({\n                sub: checkUserExists.id,\n                name: checkUserExists.name,\n                email: checkUserExists.email\n            })\n            return {\n                statusCode: 200,\n                message: \"Login berhasil\",\n                accessToken: accessToken\n            }\n        } else {\n            throw new HttpException(\"User or password not match\", HttpStatus.UNAUTHORIZED)\n        }\n    }\n\n    /**\n     * Description placeholder\n     *\n     * @param {*} payload\n     * @returns {*}\n     */\n    generateJWT(payload: any) {\n        return this.jwtService.sign(payload, {\n            secret: jwt_config.secret,\n            expiresIn: jwt_config.expired\n        })\n    }\n\n    /**\n     * Description placeholder\n     *\n     * @async\n     * @param {number} user_id\n     * @returns {unknown}\n     */\n    async profile(user_id: number) {\n        const dataUser = await this.prisma.users.findFirst({\n            where: {\n                id: user_id\n            },\n            select: {\n                id: true,\n                name: true,\n                email: true,\n                avatar: true,\n                task: true\n            }\n        })\n        if (dataUser) {\n            return {\n                statusCode: HttpStatus.OK,\n                data: dataUser\n            }\n        }\n    }\n\n    async uploadAvatar(user_id: number, avatar) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                id: user_id\n            }\n        })\n        if (checkUserExists) {\n            const updateAvatar = await this.prisma.users.update({\n                data: {\n                    avatar: avatar\n                },\n                where: {\n                    id: user_id\n                }\n            })\n            if (updateAvatar) {\n                return {\n                    statuscode: HttpStatus.OK,\n                    message: 'Upload avatar berhasil',\n                }\n            }\n        }\n        throw new HttpException(\"Bad Request\", HttpStatus.BAD_REQUEST)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\"\n\nexport class CreateSchoolDto {\n\n    @IsString()\n    @IsNotEmpty()\n    school_name: string\n\n    @IsString()\n    @IsOptional()\n    @IsEmail()\n    email?: string\n\n    @IsString()\n    @IsOptional()\n    address?: string\n\n    @IsString()\n    @IsOptional()\n    phone?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\"\n\nexport class CreateTaskDto {\n\n    id_user: number;\n\n    @IsNotEmpty()\n    @IsString()\n    task_name: string\n\n    @IsNotEmpty()\n    @IsString()\n    task_description: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwt_config } from \"src/config/jwt_config\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt_config.secret\n        })\n    }\n\n    async validate(payload: any) {\n        return {\n            id: payload.sub,\n            email: payload.email,\n            expired: payload.exp\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LatihanController.html":{"url":"controllers/LatihanController.html","title":"controller - LatihanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LatihanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                latihan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatihan()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/latihan/latihan.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LatihanService } from './latihan.service';\n\n@Controller('latihan')\nexport class LatihanController {\n\n    constructor(private latihanService: LatihanService) { }\n    @Get()\n    getLatihan() {\n        return this.latihanService.getLatihan()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LatihanModule.html":{"url":"modules/LatihanModule.html","title":"module - LatihanModule","body":"\n                   \n\n\n\n\n    Modules\n    LatihanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\n\nLatihanService\n\nLatihanService\n\n\n\nLatihanModule\n\nLatihanModule\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/latihan/latihan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LatihanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LatihanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LatihanController } from './latihan.controller';\nimport { LatihanService } from './latihan.service';\n\n@Module({\n  controllers: [LatihanController],\n  providers: [LatihanService]\n})\nexport class LatihanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatihanService.html":{"url":"injectables/LatihanService.html","title":"injectable - LatihanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LatihanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \ngetLatihan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/latihan/latihan.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LatihanService {\n    getLatihan() {\n        return {\n            message: \"Latihan\"\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\"\n\nexport class LoginDto {\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication) {\n        process.on('beforeExit', async () => {\n            await app.close();\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\"\n\nexport class RegisterDto {\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    name: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:21\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:33\n                        \n                    \n\n\n            \n                \n                        Description placeholder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\n\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) { }\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  /**\n   * Description placeholder\n   *\n   * @returns {*}\n   */\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n\n  /**\n   * Description placeholder\n   *\n   * @param {string} id\n   * @returns {*}\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateSchoolDto: UpdateSchoolDto) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeByEmail\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n\n  constructor(private prisma: PrismaService) { }\n\n  async create(createSchoolDto: CreateSchoolDto) {\n    const createSchool = await this.prisma.schools.create({\n      data: createSchoolDto\n    })\n    if (createSchool) {\n      return {\n        statusCode: 200,\n        data: createSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async findAll() {\n    const dataSchool = await this.prisma.schools.findMany()\n    if (dataSchool) {\n      return {\n        statusCode: 200,\n        data: dataSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async findOne(id: number) {\n    const dataSchool = await this.prisma.schools.findFirst({\n      where: {\n        id\n      }\n    })\n    if (dataSchool) {\n      return {\n        statusCode: 200,\n        data: dataSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    const updateSchool = await this.prisma.schools.update({\n      data: updateSchoolDto,\n      where: {\n        id\n      }\n    })\n    if (updateSchool) {\n      return {\n        statusCode: 200,\n        message: \"Data updated successfully !\",\n        data: updateSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async remove(id: number) {\n    const deleteSchool = await this.prisma.schools.delete({\n      where: {\n        id\n      }\n    })\n    if (deleteSchool) {\n      return {\n        statusCode: 200,\n        message: \"Data deleted successfully !\",\n        data: deleteSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async findEmail(email: string) {\n    const dataSchool = await this.prisma.schools.findFirst({\n      where: {\n        email: email\n      }\n    })\n    if (dataSchool) {\n      return {\n        statusCode: 200,\n        data: dataSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n\n  async removeByEmail(email: string) {\n    try {\n      \n    } catch (error) {\n      return error.message\n    }\n    const deleteSchool = await this.prisma.schools.delete({\n      where: {\n        email\n      }\n    })\n    if (deleteSchool) {\n      return {\n        statusCode: 200,\n        message: \"Data deleted successfully !\",\n        data: deleteSchool\n      }\n    }\n    throw new HttpException(\" Request Error \", HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n    task_id: number\n    task_name: string\n    task_description: string\n}\nexport const task: Task[] = [\n    {\n        task_id: 1,\n        task_name: \"Task 1\",\n        task_description: \"Task 1\",\n    },\n    {\n        task_id: 2,\n        task_name: \"Task 2\",\n        task_description: \"Task 2\",\n    },\n    {\n        task_id: 3,\n        task_name: \"Task 3\",\n        task_description: \"Task \"\n    }\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id, body: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Get, Param, Patch, Delete, UsePipes, ValidationPipe, UseGuards } from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n    constructor(private taskService: TaskService) { }\n\n    //@UsePipes(ValidationPipe)\n    @UseGuards(AuthGuard)\n    @Post()\n    async createTask(@Body() body: CreateTaskDto) {\n        return await this.taskService.createTask(body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Get()\n    async getAllTask() {\n        return await this.taskService.getAllTask();\n    }\n\n    @UseGuards(AuthGuard)\n    @Get('/:task_id')\n    async getTaskById(@Param('task_id') task_id) {\n        return await this.taskService.getTaskById(+task_id);\n    }\n\n    @UseGuards(AuthGuard)\n    @Patch('/:task_id')\n    async updateTaskById(@Param('task_id') task_id, @Body() body: UpdateTaskDto) {\n        return await this.taskService.updateTaskById(+task_id, body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Delete('/:task_id')\n    async deleteTaskById(@Param('task_id') task_id) {\n        return await this.taskService.deleteTaskById(+task_id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService]\n})\nexport class TaskModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id: number, data: UpdateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { task } from './data/task';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\n\n\n@Injectable()\nexport class TaskService {\n\n    constructor(private prisma: PrismaService,\n        @Inject(REQUEST) private req: any,\n    ) { }\n\n    async createTask(data: CreateTaskDto) {\n        data.id_user = this.req.user.id\n        const createData = await this.prisma.task.create({\n            data: data,\n        });\n\n        return {\n            statusCode: 200,\n            data: createData\n        }\n    }\n\n    async getAllTask() {\n        const dataTask = await this.prisma.task.findMany({\n            where: {\n                id_user: this.req.user.id\n            },\n            include: {\n                users: {\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true,\n                        avatar: true\n                    }\n                }\n            }\n        })\n        return {\n            statusCode: 200,\n            data: dataTask\n        }\n    }\n\n    async getTaskById(task_id: number) {\n        const dataTask = await this.prisma.task.findFirst({\n            where: {\n                id: task_id,\n                id_user: this.req.user.id\n            }\n        })\n        return {\n            statusCode: 200,\n            data: dataTask\n            // data: task.find((task) => task.task_id == task_id)\n        }\n    }\n\n    async updateTaskById(task_id: number, data: UpdateTaskDto) {\n        data.id_user = this.req.user.id\n        const updateTask = await this.prisma.task.update({\n            where: {\n                id: task_id\n            },\n            data: data\n        })\n        return {\n            statusCode: 200,\n            data: updateTask\n        }\n    }\n\n    async deleteTaskById(task_id: number) {\n        const deleteTask = await this.prisma.task.delete({\n            where: {\n                id: task_id\n            }\n        })\n        return {\n            statusCode: 200,\n            data: deleteTask,\n            // data: task.find((task) => task.task_id == task_id),\n            message: \"Sukses delete data\"\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from \"class-validator\"\n\nexport class UpdateTaskDto {\n\n    id_user: number;\n\n    @IsOptional()\n    @IsString()\n    task_name: string\n\n    @IsOptional()\n    @IsString()\n    task_description: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/jwt_config.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/latihan/latihan.controller.ts\n            \n            controller\n            LatihanController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/latihan/latihan.service.ts\n            \n            injectable\n            LatihanService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            variable\n            task\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @prisma/client : ^5.15.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            handlebars : ^4.7.8\n        \n            nodemailer : ^6.9.13\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma : ^5.15.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\nDescription\nTo do list with Rest API with simple functional such as :\n\nCRUD\nSend Email\nJWT Auth\nRelationanl \nPrisma Migration\nSimple Unit Testing\nCompodoc\nSwagger\nDocker\n\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n# run smtp local\n$ docker run --rm -p 25:25 -p 8025:80 rnwood/smtp4dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LatihanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLatihanService\n\nLatihanService\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../jwt_config.ts)\n                        \n                        \n                            task   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt_config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: 'abcdefghij',\n    expired: 3600\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        task_id: 1,\n        task_name: \"Task 1\",\n        task_description: \"Task 1\",\n    },\n    {\n        task_id: 2,\n        task_name: \"Task 2\",\n        task_description: \"Task 2\",\n    },\n    {\n        task_id: 3,\n        task_name: \"Task 3\",\n        task_description: \"Task \"\n    }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
